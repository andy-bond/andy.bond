<button title="Back to Top" id="back-to-top-btn">
	<icon name="arrow-up"></icon>
</button>

<style webc:scoped>
	:host {
		position: fixed;
		bottom: var(--default-spacing);
		right: var(--default-spacing);
		pointer-events: none;
		z-index: 999;
	}

	button {
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		border: none;
		background-color: var(--theme-color-link);
		color: var(--theme-color-text-inverse);
		cursor: pointer;
		padding: var(--default-spacing-half);
		border-radius: 50%;
		height: 48px;
		width: 48px;
		opacity: 0;
		box-shadow: var(--default-shadow-medium);
		pointer-events: painted;
		transform: translateY(100px);
		transition: transform var(--default-transition),
			opacity var(--default-transition),
			background-color var(--default-transition);
	}

	button > svg {
		height: 24px;
		width: 24px;
	}

	button.show {
		opacity: 1;
		transform: translateY(0);
	}

	button:hover,
	button:focus-within {
		background-color: var(--theme-color-title);
	}
</style>

<script webc:bucket="defer">
	class BackToTop extends HTMLElement {
		constructor() {
			super();
		}

		connectedCallback() {
			window.addEventListener(
				'scroll',
				() => {
					const scrollingElement = document.documentElement;
					const scrollToTopBtn = this.querySelector(
						':scope > #back-to-top-btn'
					);
					const scrollTotal =
						scrollingElement.scrollHeight - scrollingElement.clientHeight;
					if (scrollingElement.scrollTop / scrollTotal > 0.5) {
						scrollToTopBtn.classList.add('show');
					} else {
						scrollToTopBtn.classList.remove('show');
					}
				},
				false
			);

			this.querySelector(':scope > #back-to-top-btn').addEventListener(
				'click',
				() => {
					const scrollingElement = document.documentElement;
					scrollingElement.scrollTo({ top: 0, behavior: 'smooth' });
				},
				false
			);
		}
	}

	customElements.define('back-to-top', BackToTop);
</script>
